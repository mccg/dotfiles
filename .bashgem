#!/bin/bash
# .bashrc

parse_git_branch () {
  git branch 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

watchd () {
  [ x"$1" == x"usage" ] && { echo "WATCHD_F=<file> watchd <command>"; return 0; }
  command -v md5sum >/dev/null 2>&1 || { echo "Command 'md5sum' required but not installed."; return -1; }
  [ $(printenv WATCHD_N) ] || WATCHD_N=0.8
  [ $(printenv WATCHD_F) ] || { echo "A file must be watched. Set WATCHD_F="; return -2; }
  let watchd_executed_times=0
  local watchd_md5sum=
 (
  trap 'rm -f ${temp_file};echo -e "\nExit watchd."' EXIT
  while true;
  do
    local watching_md5sum=`md5sum ${WATCHD_F} | cut -f1 -d' '`
    if [[ x$watching_md5sum != x$watchd_md5sum ]];then
      local temp_file=$(mktemp)
      let watchd_executed_times=watchd_executed_times+1
      watchd_md5sum=$watching_md5sum
      echo "[watchd] : "`date "+%F %T %Z %z"`". Watching file: ${WATCHD_F}" >>$temp_file
      echo "[watchd] : Command : "$@                                        >>$temp_file
      $@                                                                    >>$temp_file 2>&1
      echo ""                                                               >>$temp_file
      echo "[watchd] : ${watchd_executed_times} times executed."            >>$temp_file
      clear
      cat $temp_file
      rm -f $temp_file
    fi
    sleep $WATCHD_N
  done
 )
}

watch2 () {
  [ x"$1" == x"usage" ] && { echo "[ WATCH2_N=<number> ] watch2 <command>"; return 0; }
  [ $(printenv WATCH2_N) ] || WATCH2_N=3
  let watch2_executed_times=0
 (
  trap 'rm -f ${temp_file};echo -e "\nExit watch2."' EXIT
  while true;
  do
    local temp_file=$(mktemp)
    let watch2_executed_times=watch2_executed_times+1
    echo "[watch2] : "`date "+%F %T %Z %z"`". Time interval: ${WATCH2_N}s" >>$temp_file
    echo "[watch2] : Command : "$@                                         >>$temp_file
    $@                                                                     >>$temp_file 2>&1
    echo ""                                                                >>$temp_file
    echo "[watch2] : ${watch2_executed_times} times executed."             >>$temp_file
    clear
    cat $temp_file
    rm -f $temp_file
    sleep $WATCH2_N
  done
 )
}

vs () {
  vim ${1/\:/ +}
}

lsp () {
  for f in "$@";do find `pwd` -name "$f";done
}

mkcd () {
  mkdir -p $1 && cd $1
}

tarx() {
  if [ -f $1 ] ; then
    case $1 in
    *.tar.bz2)   tar -xvjf $1    ;;
    *.tar.gz)    tar -xvzf $1    ;;
    *.tar.xz)    tar -xvJf $1    ;;
    *.bz2)       bunzip2 $1      ;;
    *.rar)       rar x $1        ;;
    *.gz)        gunzip $1       ;;
    *.tar)       tar -xvf $1     ;;
    *.tbz2)      tar -xvjf $1    ;;
    *.tgz)       tar -xvzf $1    ;;
    *.zip)       unzip $1        ;;
    *.Z)         uncompress $1   ;;
    *.7z)        7z x $1         ;;
    *)           echo "don't know how to extract '$1'..." ;;
    esac
  else
    echo "'$1' is not a valid file!"
  fi
}

tarc() {
  if [ -n "$1" ] ; then
    FILE=$1
    case $FILE in
    *.tar) shift && tar -cf $FILE $*      ;;
    *.tar.bz2) shift && tar -cjf $FILE $* ;;
    *.tar.xz) shift && tar -cJf $FILE $*  ;;
    *.tar.gz) shift && tar -czf $FILE $*  ;;
    *.tgz) shift && tar -czf $FILE $*     ;;
    *.zip) shift && zip $FILE $*          ;;
    *.rar) shift && rar $FILE $*          ;;
    esac
  else
      echo "usage: tarc <foo.tar.gz> ./foo ./bar"
  fi
}

export PS1="[\u@\h \w]\033[32m\]\$(parse_git_branch)\033[0m\]\n$ "
export TERM=xterm-256color

alias vi='vim'
alias view='vim -R'
alias l='ls -lha'
alias la='ls -a'
alias lh='ls -lh'
alias ll='ls -lh'
alias lla='ls -lha'
alias tat='tmux at -t'
alias tls='tmux ls'
alias tns='tmux new -s'
alias dirs='dirs -v'
alias pd='pushd'
alias cd.='cd ..'
alias cd..='cd ../..'
alias cd...='cd ../../..'
alias his='history'

alias gitadog='git log --oneline --all --decorate --graph'
alias gitac='git add -A && git commit -m'

alias vimrc='vim ~/.vimrc'
alias vibashrc='vim ~/.bashrc'
alias vibashprofile='vim ~/.bash_profile'
alias vibashgem='vim ~/.bashgem'
alias vigitconfig='vim ~/.gitconfig'
alias sbashrc='source ~/.bashrc'
alias stmux='tmux source-file ~/.tmux.conf'

alias pingbaidu="ping www.baidu.com"
alias sag='/usr/bin/ssh-agent bash'
alias sad='/usr/bin/ssh-add'
